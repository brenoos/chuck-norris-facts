{"version":3,"sources":["assets/chuck-norris-cartoon.png","services/api.js","store/modules/facts/index.js","pages/Categories/styles.js","pages/Categories/index.js","pages/Joke/styles.js","pages/Joke/index.js","routes.js","pages/Main/styles.js","pages/Main/index.js","store/modules/rootReducer.js","store/index.js","styles/global.js","App.js","index.js"],"names":["module","exports","api","axios","create","baseURL","selectCategory","createAction","fetchCategoriesRequest","fetchCategoriesSuccess","fetchCategoriesFailed","fetchJokeRequest","fetchJokeSuccess","fetchJokeFailed","createReducer","categories","categoriesLoading","categoriesError","selectedCategory","joke","jokeLoading","jokeError","state","produce","draft","payload","getJoke","dispatch","getState","a","get","params","category","facts","data","value","StyledPaper","styled","Paper","attrs","elevation","StyledCircularProgress","CircularProgress","Categories","useDispatch","useSelector","loading","error","useEffect","length","Typography","variant","component","map","to","key","onClick","StyledCard","Card","StyledCardActions","CardActions","JokeContainer","div","Joke","raised","Button","size","color","routes","exact","path","RootContainer","LogoRow","Main","src","ChuckNorris","alt","combineReducers","configureStore","reducer","rootReducer","createGlobalStyle","App","store","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a548803.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chuck-norris-cartoon.b8dd7bdf.png\";","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.chucknorris.io/jokes',\n});\n\nexport default api;\n","import { createAction, createReducer } from '@reduxjs/toolkit';\nimport produce from 'immer';\nimport api from '../../../services/api';\n\nconst INITIAL_STATE = {\n  categories: [],\n  categoriesLoading: false,\n  categoriesError: false,\n  selectedCategory: '',\n  joke: '',\n  jokeLoading: false,\n  jokeError: false,\n};\n\nexport const selectCategory = createAction('@facts/SELECTED_CATEGORY');\n\nexport const fetchCategoriesRequest = createAction(\n  '@facts/FETCH_CATEGORIES_REQUEST'\n);\nexport const fetchCategoriesSuccess = createAction(\n  '@facts/FETCH_CATEGORIES_SUCCESS'\n);\nexport const fetchCategoriesFailed = createAction(\n  '@facts/FETCH_CATEGORIES_FAILED'\n);\n\nexport const fetchJokeRequest = createAction('@facts/FETCH_JOKE_REQUEST');\nexport const fetchJokeSuccess = createAction('@facts/FETCH_JOKE_SUCCESS');\nexport const fetchJokeFailed = createAction('@facts/FETCH_JOKE_FAILED');\n\nexport default createReducer(INITIAL_STATE, {\n  [fetchCategoriesRequest]: (state) =>\n    produce(state, (draft) => {\n      draft.categoriesError = false;\n      draft.categoriesLoading = true;\n    }),\n  [fetchCategoriesSuccess]: (state, { payload }) =>\n    produce(state, (draft) => {\n      draft.categories = payload;\n      draft.categoriesLoading = false;\n    }),\n  [fetchCategoriesFailed]: (state) =>\n    produce(state, (draft) => {\n      draft.categoriesError = true;\n      draft.categoriesLoading = false;\n    }),\n  [fetchJokeRequest]: (state) =>\n    produce(state, (draft) => {\n      draft.jokeError = false;\n      draft.jokeLoading = true;\n      draft.joke = '';\n    }),\n  [fetchJokeSuccess]: (state, { payload }) =>\n    produce(state, (draft) => {\n      draft.joke = payload;\n      draft.jokeLoading = false;\n    }),\n  [fetchJokeFailed]: (state) =>\n    produce(state, (draft) => {\n      draft.jokeError = true;\n      draft.jokeLoading = false;\n    }),\n  [selectCategory]: (state, { payload }) =>\n    produce(state, (draft) => {\n      draft.selectedCategory = payload;\n    }),\n});\n\nexport const getCategories = () => {\n  return async (dispatch) => {\n    dispatch(fetchCategoriesRequest());\n    try {\n      const { data } = await api.get('/categories');\n      dispatch(fetchCategoriesSuccess(data));\n    } catch (err) {\n      dispatch(fetchCategoriesFailed());\n    }\n  };\n};\n\nexport const getJoke = () => {\n  return async (dispatch, getState) => {\n    dispatch(fetchJokeRequest());\n    try {\n      const { data } = await api.get('/random', {\n        params: {\n          category: getState().facts.selectedCategory,\n        },\n      });\n\n      dispatch(fetchJokeSuccess(data.value));\n    } catch (err) {\n      dispatch(fetchJokeFailed());\n    }\n  };\n};\n","import styled from 'styled-components';\nimport Paper from '@material-ui/core/Paper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport const StyledPaper = styled(Paper).attrs({ elevation: 10 })`\n  margin-top: 10px;\n  width: 400px;\n  height: 400px;\n\n  p {\n    padding: 15px 15px;\n    border-bottom: 3px solid #000;\n  }\n\n  ul {\n    list-style: none;\n    height: 84%;\n    overflow-x: auto;\n\n    a {\n      text-decoration: none;\n      color: #7b1fa2;\n    }\n\n    li {\n      padding: 15px 15px;\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n      align-items: center;\n      cursor: pointer;\n      font-weight: bold;\n\n      border-bottom: 1px solid #eee;\n    }\n  }\n`;\n\nexport const StyledCircularProgress = styled(CircularProgress)`\n  margin: 30px 180px;\n`;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport { getCategories, selectCategory } from '../../store/modules/facts';\n\nimport {\n  StyledPaper as Paper,\n  StyledCircularProgress as CircularProgress,\n} from './styles';\n\nconst Categories = () => {\n  const dispatch = useDispatch();\n\n  const { categories, loading, error } = useSelector(({ facts }) => ({\n    categories: facts.categories,\n    loading: facts.categoriesLoading,\n    error: facts.categoriesError,\n  }));\n\n  useEffect(() => {\n    if (categories.length <= 0 || !categories) {\n      dispatch(getCategories());\n    }\n  }, [dispatch, categories]);\n\n  return (\n    <Paper>\n      <Typography variant=\"subtitle1\" component=\"p\">\n        Select an category to view a joke\n      </Typography>\n\n      {loading && <CircularProgress />}\n\n      {!loading && !error && (\n        <ul>\n          {categories.map((category) => (\n            <Link to=\"/joke\" key={category}>\n              <Typography\n                variant=\"body1\"\n                component=\"li\"\n                onClick={() => {\n                  dispatch(selectCategory(category));\n                }}\n              >\n                {category}\n              </Typography>\n            </Link>\n          ))}\n        </ul>\n      )}\n\n      {error && <p> Unable to retrieve categories</p>}\n    </Paper>\n  );\n};\n\nexport default Categories;\n","import styled from 'styled-components';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\n\nexport const StyledCard = styled(Card)`\n  margin-top: 10px;\n  width: 400px;\n\n  p {\n    padding: 15px 15px;\n    border-bottom: 3px solid #000;\n  }\n\n  a {\n    text-decoration: none;\n  }\n`;\n\nexport const StyledCardActions = styled(CardActions)`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const JokeContainer = styled.div`\n  padding: 15px;\n`;\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Typography, CircularProgress } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { getJoke } from '../../store/modules/facts';\n\nimport {\n  StyledCard as Card,\n  StyledCardActions as CardActions,\n  JokeContainer,\n} from './styles';\n\nconst Joke = () => {\n  const dispatch = useDispatch();\n\n  const { selectedCategory, joke, loading, error } = useSelector(\n    ({ facts }) => ({\n      selectedCategory: facts.selectedCategory,\n      joke: facts.joke,\n      loading: facts.jokeLoading,\n      error: facts.jokeError,\n    })\n  );\n\n  useEffect(() => {\n    if (selectedCategory) {\n      dispatch(getJoke());\n    }\n  }, [dispatch, selectedCategory]);\n\n  return (\n    <Card raised>\n      <Typography variant=\"subtitle1\" component=\"p\">\n        {selectedCategory\n          ? `You have selected: ${selectedCategory}`\n          : 'Category not selected'}\n      </Typography>\n      <JokeContainer>\n        <Typography variant=\"h6\">\n          {!selectedCategory &&\n            'Back to categories to choose one and see a joke'}\n          {loading && <CircularProgress />}\n          {!loading && error && 'Unable to connect to server'}\n          {!loading && joke}\n        </Typography>\n      </JokeContainer>\n\n      <CardActions>\n        <Link to=\"/\">\n          <Button size=\"small\" color=\"primary\">\n            Back To Categories\n          </Button>\n        </Link>\n\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          onClick={() => dispatch(getJoke())}\n        >\n          Another Joke\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default Joke;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Categories from './pages/Categories';\nimport Joke from './pages/Joke';\n\nconst routes = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Categories} />\n        <Route path=\"/joke\" component={Joke} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default routes;\n","import styled from 'styled-components';\n\nexport const RootContainer = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const LogoRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 400px;\n  justify-content: flex-start;\n  align-items: center;\n\n  img {\n    height: 100px;\n    width: 100px;\n  }\n\n  h1 {\n    color: #fff;\n    margin: 0 auto;\n  }\n`;\n","import React from 'react';\nimport Routes from '../../routes';\n\nimport { RootContainer, LogoRow } from './styles';\n\nimport ChuckNorris from '../../assets/chuck-norris-cartoon.png';\n\nconst Main = () => {\n  return (\n    <RootContainer>\n      <LogoRow>\n        <img src={ChuckNorris} alt=\"Chuck\" />\n        <h1>Chuck Norris Facts</h1>\n      </LogoRow>\n\n      <Routes />\n    </RootContainer>\n  );\n};\n\nexport default Main;\n","import { combineReducers } from 'redux';\n\nimport facts from './facts';\n\nexport default combineReducers({\n  facts,\n});\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport rootReducer from './modules/rootReducer';\n\nexport default configureStore({\n  reducer: rootReducer,\n});\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  html, body, #root {\n    height: 100%;\n  }\n\n  body {\n    background: #4a148c;\n    -webkit-font-smoothing: antialiased !important;\n  }\n\n  body, input, button {\n    color: #222;\n    font-size: 14px;\n    font-family: Roboto, Arial, Helvetica, sans-serif;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport Main from './pages/Main';\nimport store from './store';\n\nimport GlobalStyles from './styles/global';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Main />\n      <GlobalStyles />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}